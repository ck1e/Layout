const initSplideMainSlider = function () {
    let e = new Splide(".main__slider-splide", {
        type: "slide",
        perPage: 2,
        perMove: 1,
        width: "100vw",
        fixedWidth: "934px",
        fixedHeight: "553px",
        updateOnMove: !0,
        focus: "center",
        trimSpace: !1,
        start: 1,
        gap: "2rem"
    }).mount(), t = document.querySelector(".main__slider-splide"), i = t.querySelectorAll(".product.splide__slide");
    e.on("moved", function () {
        let e = i[0].classList.contains("is-active"), s = i[i.length - 1].classList.contains("is-active"),
            l = t.querySelector(".splide__arrow--prev"), r = t.querySelector(".splide__arrow--next");
        e && (l.classList.add("--disable"), l.disabled = !0), s && (r.classList.add("--disable"), r.disabled = !0), e || s || (l.classList.remove("--disable"), l.disabled = !1, r.classList.remove("--disable"), r.disabled = !1)
    })
}, initSplideRooms = function () {
    let e = new Splide(".main__rooms-splide", {
            type: "slide",
            perPage: 0,
            perMove: 0,
            width: "880px",
            updateOnMove: !0,
            focus: "center",
            gap: "1.5rem",
            drag: !1
        }).mount(), t = document.querySelector(".main__rooms-splide"), i = t.querySelectorAll(".room.splide__slide"),
        s = t.querySelector(".splide__list"), l = t.querySelectorAll(".splide__pagination__page"),
        r = i[1].offsetWidth + parseInt(getComputedStyle(i[0], !0).marginRight),
        n = `transform ${e.options.speed}ms ${e.options.easing}`, o = 0;
    l.forEach(function (e, t, i) {
        e.disabled = !0
    }), e.on("moved", function () {
        let e = i[0].classList.contains("is-active"), s = i[i.length - 1].classList.contains("is-active"),
            l = t.querySelector(".splide__arrow--prev"), r = t.querySelector(".splide__arrow--next");
        e && (l.style.display = "none"), s && (r.style.display = "none"), e || s || (l.style.display = "flex", r.style.display = "flex")
    });
    t.addEventListener("click", function (e) {
        e.target.closest(".splide__arrow--prev") && (o -= r, s.style.transform = "translateX(" + -o + "px)", s.style.transition = n)
    }), t.addEventListener("click", function (e) {
        e.target.closest(".splide__arrow--next") && (o += r, s.style.transform = "translateX(" + -o + "px)", s.style.transition = n)
    })
}, initSplideTricks = function () {
    let e = new Splide(".main__tricks-splide", {
        type: "slide",
        perPage: 3,
        perMove: 2,
        width: "1285px",
        gap: "2rem"
    }).mount(), t = document.querySelectorAll(".trick"), i = setInterval(() => {
        if (t[0].classList.contains("is-active")) {
            let e = document.querySelectorAll(".trick.is-visible");
            e[0].classList.remove("is-active"), e[1].classList.add("is-active")
        }
    }, 10);
    setTimeout(() => clearInterval(i), 5e3), e.on("moved", function () {
        let e = document.querySelectorAll(".trick.is-visible");
        e[0].classList.remove("is-active"), e[1].classList.add("is-active"), e[2].classList.remove("is-active")
    })
}, initFuniroRiver = function (e) {
    let t = document.querySelector(".funiro"), i = t.querySelectorAll(".funiro__item"),
        s = 2 * parseInt(window.getComputedStyle(i[0], null).margin);
    i.forEach(function (e, t, i) {
        e.style.width = e.clientWidth / 2 + "px"
    });
    let l = t.clientWidth / e + s * i.length, r = 0;
    t.style.width = l + "px", new Masonry(".funiro", {
        itemSelector: ".funiro__item",
        columnWidth: 2,
        horizontalOrder: !0
    }), setInterval(function (e) {
        r < -l ? (r = 0, t.style.transform = "translateX(" + r + "px)") : (r -= e, t.style.transform = "translateX(" + r + "px)")
    }, 7.5, 1)
};
window.addEventListener("DOMContentLoaded", initSplideMainSlider), window.addEventListener("DOMContentLoaded", initSplideRooms), window.addEventListener("DOMContentLoaded", initSplideTricks), window.addEventListener("load", initFuniroRiver(2));
//# sourceMappingURL=script.min.js.map
